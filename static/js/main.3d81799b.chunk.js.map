{"version":3,"sources":["react-auth0-wrapper.js","components/NavBar/NavBar.jsx","components/Profile/Profile.jsx","components/Spendings/Spendings.jsx","components/AddSpending/AddSpending.jsx","App.js","serviceWorker.js","index.js"],"names":["DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","NavBar","_useAuth","isAuthenticated","loginWithRedirect","logout","react_default","a","createElement","onClick","react_router_dom","to","Profile","loading","user","Fragment","src","picture","alt","name","email","JSON","stringify","Spendings","state","data","fetchData","_callee","response","regenerator_default","wrap","_context","prev","next","fetch","proxyurl","sent","json","_this","setState","t0","console","log","stop","this","map","element","i","key","type","value","Component","App","className","components_Spendings_Spendings","components_NavBar_NavBar","react_router","path","exact","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","origin","ReactDOM","render","_ref","children","_ref$onRedirectCallba","onRedirectCallback","initOptions","Object","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","setIsAuthenticated","_useState3","_useState4","setUser","_useState5","_useState6","auth0Client","setAuth0","_useState7","_useState8","setLoading","_useState9","_useState10","popupOpen","setPopupOpen","useEffect","_ref2","asyncToGenerator","mark","auth0FromHook","_ref3","appState","_user","createAuth0Client","search","includes","handleRedirectCallback","getUser","apply","arguments","initAuth0","loginWithPopup","_ref4","_callee2","params","_args2","_context2","length","undefined","finish","_ref5","_callee3","_context3","Provider","getIdTokenClaims","getTokenSilently","getTokenWithPopup","domain","client_id","clientId","redirect_uri","src_App","getElementById","URL","process","href","addEventListener","concat","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3d81799b.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes(\"code=\")) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n","// src/components/NavBar.js\n\nimport React from \"react\";\nimport { useAuth0 } from \"../../react-auth0-wrapper\";\nimport { Link } from \"react-router-dom\";\n\nconst NavBar = () => {\n    const { isAuthenticated, loginWithRedirect, logout } = useAuth0();\n\n    return (\n        <div>\n            {!isAuthenticated && <button onClick={() => loginWithRedirect({})}>Log in</button>}\n\n            {isAuthenticated && <button onClick={() => logout()}>Log out</button>}\n\n            {isAuthenticated && (\n                <span>\n                    <Link to=\"/\">Home</Link>&nbsp;\n                    <Link to=\"/profile\">Profile</Link>\n                </span>\n            )}\n        </div>\n    );\n};\n\nexport default NavBar;\n","// src/components/Profile.js\n\nimport React from \"react\";\nimport { useAuth0 } from \"../../react-auth0-wrapper\";\n\nconst Profile = () => {\n  const { loading, user } = useAuth0();\n\n  if (loading || !user) {\n    return \"Loading...\";\n  }\n\n  return (\n    <>\n      <img src={user.picture} alt=\"Profile\" />\n\n      <h2>{user.name}</h2>\n      <p>{user.email}</p>\n      <code>{JSON.stringify(user, null, 2)}</code>\n    </>\n  );\n};\n\nexport default Profile;","import React, { Component } from 'react';\n\nclass Spendings extends Component {\n    state = {\n        data: []\n    }\n\n    fetchData = async () => {\n        try {\n            const proxyurl = 'https://cors-anywhere.herokuapp.com/';\n            const url = 'https://warm-bayou-54949.herokuapp.com/connection';\n            const response = await fetch(proxyurl + url);\n            const data = await response.json();\n            this.setState({ data: data });\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n    render() {\n        let data = this.state.data.map((element, i) => {\n            return <li key={i}>{element.type}: {element.value}</li>\n        })\n        return (\n            <ol>{data}</ol>\n        );\n    }\n};\n\nexport default Spendings;\n","import React, { Component } from 'react';\n\nclass AddSpending extends Component {\n    state = {\n        data: [],\n        user: '',\n        type: '',\n        value: ''\n    };\n\n\n    fetchData = async () => {\n        try {\n            const proxyurl = 'https://cors-anywhere.herokuapp.com/';\n            const url = 'https://warm-bayou-54949.herokuapp.com/connection';\n            const response = await fetch(proxyurl + url);\n            const data = await response.json();\n            this.setState({ data: data });\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    handleTypeChange = (e) =>{\n        this.setState({\n            type:e.target.value\n        })\n    };\n\n    handleValueChange = (e) =>{\n        this.setState({\n            value:e.target.value\n        })\n    };\n\n    componentDidMount() {\n        this.fetchData();\n        this.setState({user: this.props.user})\n    }\n\n    submitForm = (e) => {\n        e.preventDefault();\n        console.log({user: this.state.user, type: this.state.type, value: this.state.value});\n            fetch('https://warm-bayou-54949.herokuapp.com/add_transaction', {\n              method: 'post',\n              body: JSON.stringify({type: this.state.type, value: this.state.value})\n            }).then(function(response) {\n              return response.json();\n            }).then(function(data) {\n                console.log(data)\n            });\n          }\n\n    render() {\n        return (\n            <form>\n                <input type=\"text\" placeholder=\"income or outcome\" name=\"create_type\" value={this.state.type} onChange={this.handleTypeChange} />\n                <input type=\"number\" placeholder=\"value\" name=\"create_value\" value={this.state.value} onChange={this.handleValueChange} />\n                <input type=\"submit\" onClick={this.submitForm}/>\n                <input type=\"hidden\" value={this.state.user} name=\"user_id\" />\n            </form>\n        );\n    }\n};\n\nexport default AddSpending;\n","import React from 'react';\nimport NavBar from './components/NavBar/NavBar';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Profile from './components/Profile/Profile';\nimport Spendings from './components/Spendings/Spendings';\nimport PrivateRoute from \"./components/PrivateRoute/PrivateRoute\";\nimport AddSpending from './components/AddSpending/AddSpending';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Spendings />\n      <BrowserRouter>\n        <header>\n          <NavBar />\n        </header>\n        <Switch>\n          <Route path=\"/\" exact />\n          <Route path=\"/profile\" component={ Profile } />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Auth0Provider } from \"./react-auth0-wrapper\";\nimport config from \"./auth_config.json\";\n\nconsole.log(window.location.pathname, window.location.origin);\n\nconst onRedirectCallback = () => {\n  window.history.replaceState(\n    {},\n    document.title,\n    (window.location.origin + window.location.pathname)\n  );\n};\n\nReactDOM.render(\n  <Auth0Provider\n    domain={config.domain}\n    client_id={config.clientId}\n    redirect_uri={window.location.origin + window.location.pathname}\n    onRedirectCallback={onRedirectCallback}\n>\n    <App />\n  </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}