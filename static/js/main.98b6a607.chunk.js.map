{"version":3,"sources":["react-auth0-wrapper.js","components/NavBar/NavBar.jsx","App.js","serviceWorker.js","index.js"],"names":["DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","NavBar","_useAuth","useContext","isAuthenticated","loginWithRedirect","logout","react_default","a","createElement","onClick","App","className","components_NavBar_NavBar","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","origin","ReactDOM","render","_ref","children","_ref$onRedirectCallba","onRedirectCallback","initOptions","Object","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","setIsAuthenticated","_useState3","_useState4","user","setUser","_useState5","_useState6","auth0Client","setAuth0","_useState7","_useState8","loading","setLoading","_useState9","_useState10","popupOpen","setPopupOpen","useEffect","_ref2","asyncToGenerator","regenerator_default","mark","_callee","auth0FromHook","_ref3","appState","_user","wrap","_context","prev","next","createAuth0Client","sent","search","includes","handleRedirectCallback","getUser","stop","apply","this","arguments","initAuth0","loginWithPopup","_ref4","_callee2","params","_args2","_context2","length","undefined","t0","finish","_ref5","_callee3","_context3","Provider","value","getIdTokenClaims","getTokenSilently","getTokenWithPopup","domain","client_id","clientId","redirect_uri","targetUrl","src_App","getElementById","URL","process","href","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.98b6a607.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes(\"code=\")) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n","import React from \"react\";\nimport { useAuth0 } from \"../../react-auth0-wrapper\";\n\nconst NavBar = () => {\n  const { isAuthenticated, loginWithRedirect, logout } = useAuth0();\n\n  return (\n    <div>\n      {!isAuthenticated && (\n        <button\n          onClick={() =>\n            loginWithRedirect({})\n          }\n        >\n          Log in\n        </button>\n      )}\n\n      {isAuthenticated && <button onClick={() => logout()}>Log out</button>}\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport NavBar from \"./components/NavBar/NavBar\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <NavBar />\n      </header>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Auth0Provider } from \"./react-auth0-wrapper\";\nimport config from \"./auth_config.json\";\n\n// A function that routes the user to the right place\n// after login\n\nconsole.log(window.location.pathname, window.location.origin);\n\n\nconst onRedirectCallback = appState => {\n  window.history.replaceState(\n    {},\n    document.title,\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nReactDOM.render(\n  <Auth0Provider\n    domain={config.domain}\n    client_id={config.clientId}\n    redirect_uri={window.location.origin}\n    onRedirectCallback={onRedirectCallback}\n>\n    <App />\n  </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}